---
import type { Meal } from '../../domain/entities/meal.types'
interface Props {
  meal: Meal
}

const { image, name, category, area, ingredients, instructions, video } =
  Astro.props.meal
---

<div class="container">
  <div class="image">
    <img src={image} />
  </div>

  <div class="short-info">
    <h1>{name}</h1>
    <div class="subtitle">
      <p class="category">Category: <span>{category}</span></p>
      <p class="area">Area: <span>{area}</span></p>
    </div>
    <div class="ingridientsWrapper">
      <p class="ingridients">Ingridients:</p>
      <ul>
        {
          ingredients.map(({ ingredient, measure }) => (
            <li>
              <p class="ingridient">
                {ingredient} <span>({measure})</span>
              </p>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
  <div class="content">
    <h2>Instructions</h2>
    <ol class="instruction-list">
      {
        instructions.map((instruction) => {
          return (
            <li>
              <p class="instructions">{instruction}</p>
            </li>
          )
        })
      }
    </ol>
  </div>
  {
    video ? (
      <div class="video">
        <h2>Video Recipe</h2>
        <div class="videoWrapper">
          <iframe
            width="420"
            height="315"
            src={`https://www.youtube.com/embed/${video.slice(-11)}`}
          />
        </div>
      </div>
    ) : null
  }
</div>

<style lang="scss">
  .container {
    max-width: 1200px;
    padding: 40px 30px;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: 1fr minmax(100px, auto) minmax(auto, 1.5fr);
    grid-column-gap: 20px;
    grid-row-gap: 60px;
    margin: 0 auto;
    color: #fff;
    background-color: rgba(0, 0, 0, 0.3);
  }

  .subtitle {
    display: flex;
    gap: 20px;
    width: 100%;
  }

  .ingridientsWrapper {
    display: flex;
    flex-direction: column;
    gap: 30px;
  }

  .image {
    grid-area: 1 / 1 / 2 / 2;
    display: flex;
    justify-content: center;
  }

  .short-info {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    gap: 10px;
    grid-area: 1 / 2 / 2 / 3;
  }
  .content {
    display: flex;
    flex-direction: column;
    gap: 10px;
    grid-area: 2 / 1 / 3 / 3;
  }

  .video {
    grid-area: 3 / 1 / 4 / 3;
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  .videoWrapper {
    position: relative;
    height: 100%;
  }

  .videoWrapper iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  h1 {
    font-size: 36px;
    line-height: 40px;

    font-weight: 700;
  }

  img {
    max-width: 450px;
    width: 100%;
    max-height: 450px;
    height: 100%;
    border-radius: 50%;
    align-self: center;
  }
  .category,
  .area {
    font-size: 28px;
    line-height: 28px;
    font-weight: 700;
  }
  .category span,
  .area span {
    font-weight: normal;
  }

  .ingridients {
    font-size: 18px;
    line-height: 20px;
    font-weight: 700;
    text-align: center;
    margin-left: -40px;
  }

  .ingridient {
    font-size: 16px;
    line-height: 18px;
    font-weight: 400;
  }

  .ingridient span {
    font-weight: 700;
  }

  ul {
    list-style-type: disc;
    padding-inline-start: 15px;
    display: flex;
    flex-direction: column;
    gap: 5px;
    flex-wrap: wrap;
    max-height: 200px;
  }

  h2 {
    font-size: 30px;
    text-align: center;
  }

  .instructions {
    white-space: pre-line;
    font-size: 16px;
    line-height: 25px;
    font-weight: 400;
  }

  .instruction-list {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }
</style>
